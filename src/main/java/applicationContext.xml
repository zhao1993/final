<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
      	http://www.springframework.org/schema/aop/spring-aop.xsd">

     <!--配置文件加载 init.properties-->
    <bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:jdbc.properties" />
    </bean>
    <!-- 使用C3P0连接(池) -->
    <bean id="dataSource"  class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="idleConnectionTestPeriod" value="${jdbc.idleConnection}"></property> 
        <property name="maxIdleTime" value="${jdbc.maxIdletime}"></property>
        
    </bean>

    <!-- 配置sessionFactory-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="mappingDirectoryLocations">
         <list>
                <value>classpath:/zhao/blog/managementsystem/entity</value>
            </list>
        </property>
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
             	<!-- <prop key="hibernate.hbm2ddl.auto">update</prop>   -->
                <prop key="hibernate.connection.url">${jdbc.url}</prop>
                <prop key="hibernate.connection.driver_class">${jdbc.driverClass}</prop><!-- 使用getCurrentSession()方法，必须配置此属性 -->
            </props>
        </property>
    </bean>

    <!-- 配置hibernateTemplate
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
       <property name="sessionFactory" ref="sessionFactory"/>
       <property name="checkWriteOperations" value="false"></property>
    </bean>-->

    <!-- 事务管理器
    -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="nestedTransactionAllowed" value="true"></property>
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 使用annotation定义事务
    -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!--  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager
   -->
    <!-- <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="select*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="query*"  propagation="REQUIRED" read-only="true"/>
            <tx:method name="delete*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice> -->
       <!--   只对业务逻辑层实施事务 
       -->
    <!-- <aop:config>
        <aop:pointcut expression="execution(* zhao.blog.managementsystem.service..*.*(..))" id="businessService"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="businessService"/>
    </aop:config> -->
</beans>